y = ~`Cyanobacteria (cells/mL)`,
type = "bar",
name = "Mean") %>%
layout(barmode = "overlay")
# bar - overlay
plotly::plot_ly(data = df[which(df$`Summary Statistics`=="Maximum"),],
x = ~as.Date(Date),
y = ~`Cyanobacteria (cells/mL)`,
type = "bar",
name = "Maximum",
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)',
width = 1.5))) %>%
add_trace(data = df[which(df$`Summary Statistics`=="Mean"),],
x = ~as.Date(Date),
y = ~`Cyanobacteria (cells/mL)`,
type = "bar",
name = "Mean",
marker = list(color = 'red',
line = list(color = 'rgb(8,48,107)',
width = 1.5))) %>%
layout(barmode = "overlay")
months = 1:12
# bar - overlay
plotly::plot_ly(data = df[which(df$`Summary Statistics`=="Maximum"),],
x = ~as.Date(Date),
y = ~`Cyanobacteria (cells/mL)`,
type = "bar",
name = "Maximum",
marker = list(color = 'rgb(158,202,225)',
line = list(color = 'rgb(8,48,107)',
width = 1.5))) %>%
add_trace(data = df[which(df$`Summary Statistics`=="Mean"),],
x = ~as.Date(Date),
load("data.RData")
df.missing <- #reactive({
missing.data %>%
dplyr::mutate(GNISIDNAME = "Upper Klamath Lake_01151685")
df <- #reactive({
dta %>%
rbind(df.missing) %>%
#dplyr::mutate(barwidth = ifelse(`Summary Statistics`=="Maximum",1,
#                                ifelse(`Summary Statistics`=="Mean",0.8, 0.5))) %>%
dplyr::filter(GNISIDNAME %in% c("Upper Klamath Lake_01151685")) %>%
dplyr::filter(`Summary Statistics` %in% c("Minimum","Maximum","Mean")) %>%
#dplyr::filter(Date >= input$date_plot[1],Date <= input$date_plot[2]) %>%
dplyr::mutate(Date = as.Date(Date)) %>%
dplyr::arrange(Date)# %>%
library(tidyverse)
library(shiny)
library(shinyWidgets)
library(shinythemes)
library(shinydashboard)
library(shinydashboardPlus)
library(shinyEffects)
library(raster)
library(leaflet)
library(leaflet.extras)
library(leafem)
library(mapview)
library(plainview)
library(scales)
library(plotly)
library(DT)
library(lubridate)
library(tidyverse)
library(shiny)
library(shinyWidgets)
library(shinythemes)
library(shinydashboard)
library(shinydashboardPlus)
library(shinyEffects)
library(raster)
library(leaflet)
library(leaflet.extras)
library(leafem)
library(mapview)
library(plainview)
library(scales)
library(plotly)
library(DT)
library(lubridate)
df.missing <- #reactive({
missing.data %>%
dplyr::mutate(GNISIDNAME = "Upper Klamath Lake_01151685")
df <- #reactive({
dta %>%
rbind(df.missing) %>%
#dplyr::mutate(barwidth = ifelse(`Summary Statistics`=="Maximum",1,
#                                ifelse(`Summary Statistics`=="Mean",0.8, 0.5))) %>%
dplyr::filter(GNISIDNAME %in% c("Upper Klamath Lake_01151685")) %>%
dplyr::filter(`Summary Statistics` %in% c("Minimum","Maximum","Mean")) %>%
#dplyr::filter(Date >= input$date_plot[1],Date <= input$date_plot[2]) %>%
dplyr::mutate(Date = as.Date(Date)) %>%
dplyr::arrange(Date)# %>%
# lines with breaks; need to use df.missing data
plotly::plot_ly(
data = df,
x = ~Date,
y = ~`Cyanobacteria (cells/mL)`,
split = ~`Summary Statistics`,
type = "scatter",
mode = "lines+markers",
